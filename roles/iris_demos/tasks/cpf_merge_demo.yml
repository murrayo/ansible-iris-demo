---
- name: IRIS cpf merge demo
  ansible.builtin.debug:
    msg: "IRIS cpf merge"

# Get details about the instance - install directory

- name: Execute IRIS qlist
  iris_qlist:
    instance_name: 'IRIS'
  register: qlist_output

- name: Create variables from dictionary
  ansible.builtin.set_fact:
    "{{ item.key }}": "{{ item.value }}"
  loop: "{{ lookup('dict', qlist_output.fields) }}"


# Stop iris

- name: Stop IRIS instance and restart
  iris_start_stop:
    instance_name: 'IRIS'
    action: 'stop'
    quietly: true
  register: iris_output  # Capture the output from the stop command

# Run the cpf merge

- name: Ensure the target directory for the cpf merge file exists
  ansible.builtin.file:
    path: "{{ target_install_file_path }}"
    state: directory
    mode: '0755'  # Adjust permissions as needed

- name: Copy the IRIS configuration merge file to the target server
  ansible.builtin.copy:
    src: "{{ role_path }}/files/config_merge.cpf"
    dest: "{{ target_install_file_path }}/config_merge.cpf"
    owner: irisuser  # Optional: specify the owner
    group: irisgroup  # Optional: specify the group
    mode: '0644'  # Adjust file permissions as needed
    force: true

- name: Ensure database directories exists else CreateDatabase() will fail
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  loop:
    - "{{ iris_app_database_directory }}/APPC"
    - "{{ iris_app_database_directory }}/APPD"

- name: Set the environment variables and start IRIS
  environment:
    ISC_CPF_MERGE_FILE: "{{ target_install_file_path }}/config_merge.cpf"
    ISC_PACKAGE_INSTALLDIR: "{{ iris_qlist_instance_install_directory }}"
  iris_start_stop:
    instance_name: 'IRIS'
    action: 'start'
    quietly: true
  register: iris_output

- name: Display IRIS Start memory facts
  ansible.builtin.debug:
    msg: "IRIS Start memory facts: {{ iris_output.memory_info }}"
  when: iris_output.memory_info is defined  # Ensures stderr is displayed only if defined

- name: Display output from IRIS start command
  ansible.builtin.debug:
    msg: "{{ iris_output.stdout_lines }}"

# Set hugepages

# - name: IRIS hugepages demo
#  ansible.builtin.include_tasks: hugepages_demo.yml
